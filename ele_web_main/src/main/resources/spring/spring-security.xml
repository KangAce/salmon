<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
		xmlns="http://www.springframework.org/schema/security"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<http pattern="/login.html" security="none"/>
	<http pattern="/user/Regist.do" security="none"/>
	<!--<http pattern="/login" security="none"/>-->
	<http pattern="/js/**" security="none"/>
	<http pattern="/css/**" security="none"/>
	<http pattern="/fonts/**" security="none"/>
	<http pattern="/images/**" security="none"/>
	<http pattern="/sass/**" security="none"/>
	<http pattern="/img/**" security="none"/>
	<http pattern="/plugins/**" security="none"/>
	<http pattern="/favicon.ico" security="none"/>

	<http pattern="/assets/**" security="none"/>
	<http pattern="/openapi/**" security="none"/>
	<!-- use-expressions:设置是否启动SpEL表达式，默认值是true。 -->
	<http use-expressions="false">
		<!--
			配置SpringSecurity的拦截路径（拦截规则）
			* pattern:配置拦截规则。   /* 代表的是根路径下的所有资源（不包含子路径） /**代表的是根路径下所有的资源（包含子路径）
			* access:设置角色  角色命名 ROLE_角色名称  如：  ROLE_USER
		-->
		<intercept-url pattern="/**" access="ROLE_USER"/>
		<!--
		开启表单验证
			username-parameter="username"
			password-parameter="password"
			login-page			:登录页面名称  以  / 开始
			default-target-url	:登录成功后跳转的页面
			login-processing-url:提交的路径的设置 默认值"/login" 可以修改
		-->
		<form-login login-page="/login.html"
					default-target-url="/index.html"
					authentication-failure-url="/login.html"
					login-processing-url="/login"
		/>
		<!--always-use-default-target="true"-->

		<!-- 不使用csrf的校验 -->
		<csrf disabled="true"/>

		<!-- 配置框架页面不拦截 （frameset） -->
		<headers>
			<frame-options policy="SAMEORIGIN"/>
		</headers>

		<!-- 注销的配置 -->
		<logout logout-url="/logout" logout-success-url="/login.html" />
	</http>

	<!-- 配置认证管理器 -->
	<!--<authentication-manager>
		&lt;!&ndash; 认证的提供者 &ndash;&gt;
		<authentication-provider>
			<user-service>
				<user name="admin" password="123456" authorities="ROLE_ADMIN"/>
				<user name="wc" password="123456" authorities="ROLE_ADMIN"/>
			</user-service>
		</authentication-provider>
	</authentication-manager>-->

	<!-- 引用dubbo 服务 -->
	<dubbo:application name="ele-main-web" />
	<dubbo:registry protocol="zookeeper" address="101.200.56.109:2181"/>
	<dubbo:reference id="userService"  interface="cn.ele.core.service.user.UserService" />
	<!-- 配置自定义的认证类 -->
	<beans:bean id="userDetailService" class="cn.ele.core.service.UserDetailServiceImpl">
		<beans:property name="userService" ref="userService"></beans:property>
	</beans:bean>

	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<!-- 配置认证管理器 -->
	<authentication-manager>
		<!-- 认证的提供者 -->
		<authentication-provider user-service-ref="userDetailService">
			<password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>

</beans:beans>